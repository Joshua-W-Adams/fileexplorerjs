{"version":3,"sources":["webpack://fileexplorerjs/webpack/bootstrap","webpack://fileexplorerjs/external \"http\"","webpack://fileexplorerjs/./index.js","webpack://fileexplorerjs/./src/js sync ^\\.\\/.*\\.js$","webpack://fileexplorerjs/./src/js/fileexplorerjs.js","webpack://fileexplorerjs/external \"breadcrumbjs\"","webpack://fileexplorerjs/external \"inputator\"","webpack://fileexplorerjs/external \"treeator\"","webpack://fileexplorerjs/external \"tableator\"","webpack://fileexplorerjs/external \"contextmenuator\"","webpack://fileexplorerjs/external \"modalator\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","http","pkg","require","map","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","_fileExplorerConfig","_modal","breadcrumbjs","inputator","treeator","tableator","contextmenuator","modalator","_fileExplorerDataModel","_fileExplorerFolderView","dataModelIndex","data","_findPositionInTree","filePath","pos","length","FILE_PATH","_addEmptyRow","arr","file_path","row","DATA_DEPTH","ICON_TYPE","NAME","SIZE","LAST_EDIT_DATE","push","_getBreadCrumbFilePath","items","position","item","_updateTreeClickedItem","tr","document","getElementById","getElementsByTagName","onClickDefault","onDblClickDefault","_getBreadcrumb","bc","ui","breadcrumbDiv","firstChild","removeChild","lastChild","breadCrumbOptions","div","breadcrumbs","init","_reloadTable","matchedRow","_getFolderView","getChildren","parentPos","_findParent","_reloadBreadCrumb","split","onClick","li","_handleResponse","changeType","passed","failed","STATUS","changes","records","tableIndex","tableDepth","change","record","_getAddRecord","splice","_getDeleteRecord","index","_getUpdateRecord","_getFileFolderDetails","oldFilePath","newFilePath","newName","updateRecord","appendTreeRecords","removeTreeRecords","updateTreeRecords","_updateTree","_updateUserInterface","_displaySelectedFiles","inputElement","displayElementId","fileList","files","createElement","style","listStyleType","file","innerHTML","padding","appendChild","_getFileList","_getAddFileFormConfig","restApi","dir","child","element","content","form","action","onsubmit","formData","FormData","options","method","url","payload","headers","directory","sendRequest","then","res","JSON","parse","_addFileFormOnClick","type","multiple","display","label","htmlFor","onchange","_selectFilesButtonRenderer","onclick","_getInput","input","properties","prop","assign","_applyRender","boxSizing","width","border","borderRadius","backgroundColor","_getCurrentDirectory","_getAddFolderFormConfig","folder","api","add","stringify","hide","_addFolderOnClick","_stripLastItem","stripped","_deleteItemOnClick","getState","onMouseDownRow","_getRenameFormConfig","renameItem","renameWarningDiv","OLD_DIR","OLD_FILE","NEW_DIR","NEW_FILE","TYPE","OLD_FOLDER","NEW_FOLDER","update","_renameItemOnClick","_showForm","config","remove","modal","buildModal","show","_addFile","_addFolder","_delete","deleteItem","_rename","_downloadFile","onHoverRow","fileName","link","download","href","click","table","tableDiv","displayNames","sourceNames","names","widths","alignment","rows","rowTypeIcons","cells","onDblClick","td","rowNo","rowData","treePos","Download","Add","Folder","File","Delete","Rename","_getContextMenu","updates","childUpdates","findStartsWithString","replaceString","htmlUpdates","column","findLastChild","toolbarSearchOptions","treeOptions","tree","treeDiv","columns","newNames","search","treeSearchDiv","_getTree","tableSearchDiv","renderer","placeholder","textIndent","onKeyUp","searchTable","icon","treeSearchOptions","_getTreeSearch"],"mappings":"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","file":"fileexplorerjs.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = http;","/*!\r\n * npm Entry File\r\n * (c) 2020 Joshua Adams\r\n */\r\n\r\n/**\r\n * index.js is the default 'entry file' for npm.\r\n * This means that any require('package name') or import 'package name'\r\n * statements will refer to this file.\r\n */\r\nconst pkg = require('./package.json');\r\n// export a file with the same name as the package by default\r\nmodule.exports = require(`./src/js/${pkg.name}.js`);","var map = {\n\t\"./fileexplorerjs.js\": 4,\n\t\"./http.js\": 0,\n\t\"./tests.js\": 11\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3;","/*!\r\n * Fileexplorerjs\r\n * A JavaScript GUI module for exploring file systems\r\n * (c) 2020 Joshua Adams\r\n */\r\n\r\n/* ============================== Import Modules ============================ */\r\n\r\n// import node modules\r\nlet breadcrumbjs = require('breadcrumbjs');\r\nlet inputator = require('inputator');\r\nlet treeator = require('treeator');\r\nlet tableator = require('tableator');\r\nlet contextmenuator = require('contextmenuator');\r\nlet modalator = require('modalator');\r\n\r\n// import local modules\r\nlet http = require('./http.js');\r\n\r\n/* ================================ Variables =============================== */\r\n\r\n// *** private module variables ***\r\n// stores the passed configuration object for the file explorer view\r\nlet _fileExplorerConfig;\r\n// master file explorer data model\r\nlet _fileExplorerDataModel = [];\r\n// store the state of the folder view\r\nlet _fileExplorerFolderView = {\r\n  // location of the displayed folder in the data model\r\n  dataModelIndex: null,\r\n  // folder data currently displayed\r\n  data: null\r\n};\r\n// store modal state\r\nlet _modal;\r\n\r\n/* ============================= Private Methods ============================ */\r\n\r\nfunction _applyRender(element, properties) {\r\n  const arr = Object.keys(properties);\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const prop = arr[i];\r\n    if (typeof properties[prop] === 'object' && properties[prop] !== null) {\r\n      Object.assign(element[prop], properties[prop]);\r\n    } else {\r\n      element[prop] = properties[prop];\r\n    }\r\n  }\r\n  return element;\r\n}\r\n\r\nfunction _findPositionInTree(filePath, data) {\r\n  let pos;\r\n  for (let i = 0; i < data.length; i++) {\r\n    if (data[i].FILE_PATH === filePath) {\r\n      pos = i;\r\n      return pos;\r\n    }\r\n  }\r\n  return pos;\r\n}\r\n\r\nfunction _findParent(pos, data) {\r\n  for (let i = pos - 1; i > -1; i--) {\r\n    if (data[i].ICON_TYPE === 'folder' && data[i].DATA_DEPTH === data[pos].DATA_DEPTH - 1) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nfunction _getFileList(inputElement) {\r\n  // get list of files\r\n  const files = inputElement.files;\r\n  // create list to load files into\r\n  const fileList = document.createElement('ol');\r\n  // style list\r\n  fileList.style.listStyleType = 'none';\r\n  // add list items to file list\r\n  for (let i = 0; i < files.length; i++) {\r\n    const file = files[i];\r\n    const li = document.createElement('li');\r\n    li.innerHTML = file.name;\r\n    li.style.padding = '10px 0px';\r\n    fileList.appendChild(li);\r\n  }\r\n  return fileList;\r\n}\r\n\r\nfunction _addEmptyRow(arr, file_path) {\r\n  // get empty row of data to always be displayed to user\r\n  const row = {\r\n    DATA_DEPTH: '',\r\n    ICON_TYPE: '',\r\n    NAME: 'add new item',\r\n    SIZE: '',\r\n    LAST_EDIT_DATE: '',\r\n    FILE_PATH: file_path\r\n  };\r\n  // push row to array\r\n  arr.push(row);\r\n  return arr;\r\n}\r\n\r\nfunction _getBreadCrumbFilePath(items, position) {\r\n  let filePath = '';\r\n  for (let i = 0; i <= position; i++) {\r\n    if (i === position) {\r\n      filePath = `${filePath}${items[i].item}`;\r\n    } else {\r\n      filePath = `${filePath}${items[i].item}/`;\r\n    }\r\n  }\r\n  return filePath;\r\n}\r\n\r\nfunction _updateTreeClickedItem(pos) {\r\n  // update tree single & double clicked rows\r\n  const table = document.getElementById('treeator-tree');\r\n  const tr = table.getElementsByTagName('tr');\r\n  treeator.onClickDefault(tr[pos]);\r\n  treeator.onDblClickDefault(tr[pos]);\r\n}\r\n\r\nfunction _getBreadcrumb(items) {\r\n  // destroy current breadcrumb\r\n  const bc = document.getElementById(_fileExplorerConfig.ui.breadcrumbDiv);\r\n  while (bc.firstChild) {\r\n    bc.removeChild(bc.lastChild);\r\n  }\r\n  // construct new breadcrumb\r\n  const breadCrumbOptions = {\r\n    div: _fileExplorerConfig.ui.breadcrumbDiv,\r\n    breadcrumbs: {\r\n      items: items\r\n    }\r\n  };\r\n  breadcrumbjs.init(breadCrumbOptions);\r\n}\r\n\r\nfunction _reloadTable(matchedRow, pos, data) {\r\n  if (matchedRow.ICON_TYPE === 'folder') {\r\n    // get all children of current row\r\n    const children = treeator.getChildren(pos, data);\r\n    const folderData = _addEmptyRow(children, data[pos].FILE_PATH);\r\n    _getFolderView(pos, folderData);\r\n  } else {\r\n    const parentPos = _findParent(pos, data);\r\n    // get all children of current row\r\n    const children = treeator.getChildren(parentPos, data);\r\n    const folderData = _addEmptyRow(children, data[parentPos].FILE_PATH);\r\n    _getFolderView(parentPos, folderData);\r\n  }\r\n}\r\n\r\nfunction _reloadBreadCrumb(row, data) {\r\n  // create breadcrumb\r\n  const arr = row.FILE_PATH.split('/');\r\n  const items = [];\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const row = {\r\n      item: arr[i],\r\n      onClick: function (li, items, position) {\r\n        // get filePath to lookup in tree array\r\n        const filePath = _getBreadCrumbFilePath(items, position);\r\n        // find position of filePath in tree data\r\n        const pos = _findPositionInTree(filePath, data);\r\n        // Update tree\r\n        _updateTreeClickedItem(pos);\r\n        // Update table\r\n        _reloadTable(data[pos], pos, data);\r\n      }\r\n    };\r\n    items.push(row);\r\n  }\r\n  _getBreadcrumb(items);\r\n}\r\n\r\nfunction _handleResponse(data, changeType) {\r\n  if (data) {\r\n    const passed = [];\r\n    const failed = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      const row = data[i];\r\n      // handle success and failure of file operations\r\n      // pass of operation\r\n      if (row.STATUS === 'pass') {\r\n        // update data model with appropriate crud operation\r\n        passed.push(row);\r\n      // failure of operation\r\n      } else {\r\n        failed.push(row);\r\n      }\r\n    }\r\n    // regenerate file explorer view after all operations have been processed\r\n    if (passed.length > 0) {\r\n      _updateUserInterface(passed, changeType);\r\n    }\r\n    // TO DO - Inform user of failed operation\r\n    if (failed.length > 0) {\r\n\r\n    }\r\n  } else {\r\n    // unknown error in response from server\r\n    // TO DO - Inform user of failed update\r\n  }\r\n}\r\n\r\nfunction _addFileFormOnClick(form, dir) {\r\n  return function () {\r\n    // get form data model for submission to server\r\n    const formData = new FormData(form);\r\n    // define http request\r\n    const options = {\r\n      method: 'POST',\r\n      url: form.action,\r\n      payload: formData,\r\n      headers: {\r\n        // content type automatically assigned by form data\r\n        // 'Content-Type': null\r\n        directory: dir\r\n      }\r\n    };\r\n    const files = document.getElementById('selectFilesButton').files;\r\n    // Only submit request to server when files have been selected by user\r\n    if (files.length > 0) {\r\n      // send ajax request to server\r\n      http.sendRequest(options).then(function (res) {\r\n        const data = JSON.parse(res);\r\n        _handleResponse(data, 'add');\r\n      });\r\n    }\r\n    return false; // To avoid actual submission of the form\r\n  };\r\n}\r\n\r\nfunction _displaySelectedFiles(inputElement, displayElementId) {\r\n  // generate file list element from user selected files\r\n  const fileList = _getFileList(inputElement);\r\n  // get element to display file list in\r\n  const e = document.getElementById(displayElementId);\r\n  // remove previous items\r\n  e.innerHTML = '';\r\n  // assign file list to span\r\n  e.appendChild(fileList);\r\n}\r\n\r\nfunction _selectFilesButtonRenderer() {\r\n  // create input element for file selector\r\n  const e = document.createElement('input');\r\n  e.type = 'file';\r\n  e.multiple = 'multiple';\r\n  e.id = 'selectFilesButton';\r\n  // http request function requires a name for submission\r\n  e.name = 'uploadFiles';\r\n  e.style.display = 'none';\r\n  // custom label to override default input style\r\n  const label = document.createElement('label');\r\n  label.htmlFor = 'selectFilesButton';\r\n  label.innerHTML = 'Select Files';\r\n  label.style.display = 'inline-block';\r\n  // add function for assigning list of files on change\r\n  e.onchange = function () {\r\n    _displaySelectedFiles(e, 'dialog_body');\r\n  };\r\n  // build element object model\r\n  label.appendChild(e);\r\n  return label;\r\n}\r\n\r\nfunction _getAddFileFormConfig(restApi, dir) {\r\n  const config = [{\r\n    name: 'modal',\r\n    child: [{\r\n      name: 'dialog',\r\n      child: [{\r\n        name: 'dialog_header',\r\n        child: [{\r\n          name: 'dialog_header_title',\r\n          element: {\r\n            content: 'Upload Files'\r\n          }\r\n        }]\r\n      }, {\r\n        name: 'dialog_footer',\r\n        element: {\r\n          value: function () {\r\n            const form = document.createElement('form');\r\n            form.action = restApi;\r\n            form.onsubmit = _addFileFormOnClick(form, dir);\r\n            return form;\r\n          }\r\n        },\r\n        child: [{\r\n          name: 'dialog_footer_child',\r\n          child: [{\r\n            name: 'dialog_footer_button_two',\r\n            element: {\r\n              value: function () {\r\n                return _selectFilesButtonRenderer();\r\n              }\r\n            },\r\n            // disable default onclick function to close form\r\n            onclick: function () {},\r\n          }, {\r\n            name: 'dialog_footer_button_one',\r\n            element: {\r\n              value: function () {\r\n                const e = document.createElement('input');\r\n                e.type = 'submit';\r\n                e.value = 'Upload Files';\r\n                return e;\r\n              }\r\n            },\r\n            style: function () {\r\n              const properties = {\r\n                'background-color': '#5a6268',\r\n                'font-family': 'Gotham SSm, Helvetica, Arial, sans-serif',\r\n                'font-size': '16px'\r\n              };\r\n              return properties;\r\n            }\r\n          }]\r\n        }]\r\n      }]\r\n    }]\r\n  }];\r\n  return config;\r\n}\r\n\r\nfunction _getInput() {\r\n  const input = document.createElement('input');\r\n  const render = {\r\n    style: {\r\n      'font-size': '16px',\r\n      'font-family': 'roboto',\r\n      padding: '10px',\r\n      boxSizing: 'border-box',\r\n      width: '100%',\r\n      border: 'solid 1px rgba(0,0,0,.125)',\r\n      borderRadius: '3px',\r\n      backgroundColor: 'rgba(241,243,244,1)'\r\n    }\r\n  };\r\n  _applyRender(input, render);\r\n  return input;\r\n}\r\n\r\nfunction _getCurrentDirectory() {\r\n  let dir = '';\r\n  // check if folder view has been loaded\r\n  if (_fileExplorerFolderView.dataModelIndex || _fileExplorerFolderView.dataModelIndex === 0) {\r\n    dir = _fileExplorerDataModel[_fileExplorerFolderView.dataModelIndex].FILE_PATH;\r\n  }\r\n  return dir;\r\n}\r\n\r\nfunction _addFolderOnClick(dir, folder) {\r\n  // define request config\r\n  const options = {\r\n    method: 'POST',\r\n    url: `${_fileExplorerConfig.api.add}/folder`,\r\n    payload: JSON.stringify([{\r\n      dir: dir,\r\n      folder: folder\r\n    }]),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  // send ajax request to server\r\n  http.sendRequest(options).then(function (res) {\r\n    const data = JSON.parse(res);\r\n    _handleResponse(data, 'add');\r\n  });\r\n  // close modal\r\n  _modal.hide();\r\n}\r\n\r\nfunction _getAddFolderFormConfig() {\r\n  const input = _getInput();\r\n  const config = [{\r\n    name: 'modal',\r\n    child: [{\r\n      name: 'dialog',\r\n      child: [{\r\n        name: 'dialog_header',\r\n        child: [{\r\n          name: 'dialog_header_title',\r\n          element: {\r\n            content: 'Add Folder'\r\n          }\r\n        }]\r\n      }, {\r\n        name: 'dialog_body',\r\n        element: {\r\n          value: function () {\r\n            const div = document.createElement('div');\r\n            div.appendChild(input);\r\n            return div;\r\n          }\r\n        },\r\n        style: 'min-height:40px;'\r\n      }, {\r\n        name: 'dialog_footer',\r\n        child: [{\r\n          name: 'dialog_footer_child',\r\n          child: [{\r\n            name: 'dialog_footer_button_two',\r\n            style: 'display:none;'\r\n          }, {\r\n            name: 'dialog_footer_button_one',\r\n            element: {\r\n              content: 'Add Folder'\r\n            },\r\n            style: 'background-color:#007bff;',\r\n            onclick: function () {\r\n              const folder = input.value;\r\n              const dir = _getCurrentDirectory();\r\n              _addFolderOnClick(dir, folder);\r\n            }\r\n          }]\r\n        }]\r\n      }]\r\n    }]\r\n  }];\r\n  return config;\r\n}\r\n\r\nfunction _stripLastItem(filePath) {\r\n  const arr = filePath.split('/');\r\n  let stripped = '';\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    const row = arr[i];\r\n    if (row && row !== '') {\r\n      if (stripped !== '') {\r\n        stripped += `/${arr[i]}`;\r\n      } else {\r\n        stripped += `${arr[i]}`;\r\n      }\r\n    }\r\n  }\r\n  return stripped;\r\n}\r\n\r\nfunction _deleteItemOnClick() {\r\n  const state = tableator.getState();\r\n  const onMouseDownRow = state.onMouseDownRow;\r\n  const item = onMouseDownRow.data;\r\n  // tableator must have had a hovered row assigned to attempt deletion\r\n  if (item) {\r\n    const type = item.ICON_TYPE;\r\n    let payload;\r\n    if (type === 'file') {\r\n      payload = [{\r\n        dir: _stripLastItem(item.FILE_PATH),\r\n        file: item.NAME\r\n      }];\r\n    } else if (type === 'folder') {\r\n      payload = [{\r\n        dir: _stripLastItem(item.FILE_PATH),\r\n        folder: item.NAME\r\n      }];\r\n    }\r\n    // define request config\r\n    const options = {\r\n      method: 'POST',\r\n      url: `${_fileExplorerConfig.api.delete}/${type}`,\r\n      payload: JSON.stringify(payload),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    // send ajax request to server\r\n    http.sendRequest(options).then(function (res) {\r\n      const data = JSON.parse(res);\r\n      _handleResponse(data, 'delete');\r\n    });\r\n  }\r\n  // close modal\r\n  _modal.hide();\r\n}\r\n\r\nfunction _getDeleteFormConfig() {\r\n  const tableState = tableator.getState();\r\n  const deleteItem = tableState.onMouseDownRow.data;\r\n  const config = [{\r\n    name: 'modal',\r\n    child: [{\r\n      name: 'dialog',\r\n      child: [{\r\n        name: 'dialog_header',\r\n        child: [{\r\n          name: 'dialog_header_title',\r\n          element: {\r\n            content: 'Delete Item'\r\n          }\r\n        }]\r\n      }, {\r\n        name: 'dialog_body',\r\n        element: {\r\n          value: function () {\r\n            const div = document.createElement('div');\r\n            div.innerHTML = `Are you sure you want to delete to following item?\r\n              <br></br><br>${deleteItem.NAME}</br><br></br>\r\n              This action is irreversible.`;\r\n            return div;\r\n          }\r\n        },\r\n        style: 'min-height:40px;'\r\n      }, {\r\n        name: 'dialog_footer',\r\n        child: [{\r\n          name: 'dialog_footer_child',\r\n          child: [{\r\n            name: 'dialog_footer_button_two',\r\n            style: 'display:none;'\r\n          }, {\r\n            name: 'dialog_footer_button_one',\r\n            element: {\r\n              content: 'Delete Item'\r\n            },\r\n            style: 'background-color: red;',\r\n            onclick: _deleteItemOnClick\r\n          }]\r\n        }]\r\n      }]\r\n    }]\r\n  }];\r\n  return config;\r\n}\r\n\r\nfunction _renameItemOnClick(item, newName) {\r\n  // tableator must have had a hovered row assigned to attempt rename\r\n  if (item) {\r\n    const type = item.ICON_TYPE;\r\n    let payload;\r\n    const filePath = _stripLastItem(item.FILE_PATH);\r\n    if (type === 'file') {\r\n      payload = [{\r\n        OLD_DIR: filePath,\r\n        OLD_FILE: item.NAME,\r\n        NEW_DIR: filePath,\r\n        NEW_FILE: newName,\r\n        TYPE: 'file'\r\n      }];\r\n    } else if (type === 'folder') {\r\n      payload = [{\r\n        OLD_DIR: filePath,\r\n        OLD_FOLDER: item.NAME,\r\n        NEW_DIR: filePath,\r\n        NEW_FOLDER: newName,\r\n        TYPE: 'folder'\r\n      }];\r\n    }\r\n    // define request config\r\n    const options = {\r\n      method: 'POST',\r\n      url: `${_fileExplorerConfig.api.update}/${type}`,\r\n      payload: JSON.stringify(payload),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    // send ajax request to server\r\n    http.sendRequest(options).then(function (res) {\r\n      const data = JSON.parse(res);\r\n      _handleResponse(data, 'update');\r\n    });\r\n  }\r\n  // close modal\r\n  _modal.hide();\r\n}\r\n\r\nfunction _getRenameFormConfig() {\r\n  const input = _getInput();\r\n  const tableState = tableator.getState();\r\n  const renameItem = tableState.onMouseDownRow.data;\r\n  const config = [{\r\n    name: 'modal',\r\n    child: [{\r\n      name: 'dialog',\r\n      child: [{\r\n        name: 'dialog_header',\r\n        child: [{\r\n          name: 'dialog_header_title',\r\n          element: {\r\n            content: 'Rename Item'\r\n          }\r\n        }]\r\n      }, {\r\n        name: 'dialog_body',\r\n        element: {\r\n          value: function () {\r\n            const div = document.createElement('div');\r\n            // add a warning that the current item is about to be renamed\r\n            const renameWarningDiv = document.createElement('div');\r\n            div.innerHTML = `Are you sure you want to rename the following item?\r\n              <br></br><br>${renameItem.NAME}</br><br></br>\r\n              This action is irreversible.<br></br>`;\r\n            div.appendChild(renameWarningDiv);\r\n            // add input for user to place new name into\r\n            div.appendChild(input);\r\n            return div;\r\n          }\r\n        },\r\n        style: 'min-height:40px;'\r\n      }, {\r\n        name: 'dialog_footer',\r\n        child: [{\r\n          name: 'dialog_footer_child',\r\n          child: [{\r\n            name: 'dialog_footer_button_two',\r\n            style: 'display:none;'\r\n          }, {\r\n            name: 'dialog_footer_button_one',\r\n            element: {\r\n              content: 'Rename Item'\r\n            },\r\n            style: 'background-color:red;',\r\n            onclick: function () {\r\n              const newName = input.value;\r\n              _renameItemOnClick(renameItem, newName);\r\n            }\r\n          }]\r\n        }]\r\n      }]\r\n    }]\r\n  }];\r\n  return config;\r\n}\r\n\r\nfunction _showForm(config) {\r\n  if (_modal) {\r\n    // remove any existing modal from DOM\r\n    _modal.remove();\r\n  }\r\n  // create modal\r\n  const modal = modalator.buildModal(config);\r\n  // display modal\r\n  modal.show();\r\n  // save modal in private variable for tracking state\r\n  _modal = modal;\r\n}\r\n\r\nfunction _addFile() {\r\n  const restApi = `${_fileExplorerConfig.api.add}/file`;\r\n  // get directory for adding files to\r\n  const dir = _getCurrentDirectory();\r\n  // define modal configuration\r\n  const config = _getAddFileFormConfig(restApi, dir);\r\n  _showForm(config);\r\n}\r\n\r\nfunction _addFolder() {\r\n  const config = _getAddFolderFormConfig();\r\n  _showForm(config);\r\n}\r\n\r\nfunction _delete() {\r\n  const config = _getDeleteFormConfig();\r\n  _showForm(config);\r\n}\r\n\r\nfunction _rename() {\r\n  const config = _getRenameFormConfig();\r\n  _showForm(config);\r\n}\r\n\r\nfunction _downloadFile() {\r\n  // get state of tableator\r\n  const state = tableator.getState();\r\n  const onHoverRow = state.onHoverRow;\r\n  const filePath = onHoverRow.data.FILE_PATH;\r\n  const fileName = onHoverRow.data.NAME;\r\n  const type = onHoverRow.data.ICON_TYPE;\r\n  if (fileName && filePath && type === 'file') {\r\n    const link = document.createElement('a');\r\n    link.download = fileName;\r\n    link.href = `${_fileExplorerConfig.api.download}${filePath}`;\r\n    link.click();\r\n    link.remove();\r\n  }\r\n}\r\n\r\nfunction _getContextMenu() {\r\n  const options = {\r\n    // div to apply custom context menu to\r\n    div: _fileExplorerConfig.ui.tableDiv,\r\n    // renderer for applying css and styles to entire context menu\r\n    // 'menuRenderer': null,\r\n    // renderer for applying css and styles to each row in the context menu\r\n    // 'itemRenderer': null,\r\n    // menu items and sub items\r\n    items: {\r\n      Download: _downloadFile,\r\n      Add: {\r\n        Folder: _addFolder,\r\n        File: _addFile\r\n      },\r\n      Delete: _delete,\r\n      Rename: _rename,\r\n    }\r\n  };\r\n  contextmenuator.init(options);\r\n}\r\n\r\nfunction _getFolderView(dataModelIndex, data) {\r\n  // capture state of folder view\r\n  _fileExplorerFolderView = {\r\n    dataModelIndex: dataModelIndex,\r\n    data: data\r\n  };\r\n  // destroy existing table\r\n  const table = document.getElementById(_fileExplorerConfig.ui.tableDiv);\r\n  while (table.firstChild) {\r\n    table.removeChild(table.lastChild);\r\n  }\r\n  // construct new table\r\n  const options = {\r\n    div: _fileExplorerConfig.ui.tableDiv,\r\n    data: data,\r\n    // renderer: null,\r\n    headers: {\r\n      displayNames: true,\r\n      sourceNames: ['NAME', 'SIZE', 'LAST_EDIT_DATE'],\r\n      names: ['Name', 'Size', 'Last Edit Date'],\r\n      widths: ['50%', '25%', '25%'],\r\n      alignment: ['left', 'center', 'center'],\r\n      // renderer: null\r\n    },\r\n    rows: {\r\n      // renderer: null,\r\n      rowTypeIcons: 'filesystem'\r\n    },\r\n    cells: {\r\n      // onClick: null,\r\n      onDblClick: function (tr, td, rowNo, rowData) {\r\n        // find position of filePath in tree data\r\n        const treePos = _findPositionInTree(rowData.FILE_PATH, _fileExplorerDataModel);\r\n        // update tree single & double clicked row\r\n        _updateTreeClickedItem(treePos);\r\n        // update breadcrumb menu\r\n        _reloadBreadCrumb(_fileExplorerDataModel[treePos], _fileExplorerDataModel);\r\n        // update directory\r\n        if (rowData.ICON_TYPE === 'folder') {\r\n          // get all children of current row\r\n          const children = treeator.getChildren(treePos, _fileExplorerDataModel);\r\n          const folderData = _addEmptyRow(children, _fileExplorerDataModel[treePos].FILE_PATH);\r\n          _getFolderView(treePos, folderData);\r\n        } else {\r\n          // TO DO - Display a drawer or information panel on clicked item\r\n        }\r\n      },\r\n      // onHover: null,\r\n      // renderer: null\r\n    }\r\n  };\r\n  tableator.init(options);\r\n  _getContextMenu();\r\n}\r\n\r\nfunction _getFileFolderDetails(change) {\r\n  const o = {\r\n    oldFilePath: '',\r\n    newFilePath: '',\r\n    newName: '',\r\n  };\r\n  if (change.TYPE === 'folder') {\r\n    o.oldFilePath = `/${change.OLD_DIR}/${change.OLD_FOLDER}`;\r\n    o.newFilePath = `/${change.NEW_DIR}/${change.NEW_FOLDER}`;\r\n    o.newName = change.NEW_FOLDER;\r\n  } else if (change.TYPE === 'file') {\r\n    o.oldFilePath = `/${change.OLD_DIR}/${change.OLD_FILE}`;\r\n    o.newFilePath = `/${change.NEW_DIR}/${change.NEW_FILE}`;\r\n    o.newName = change.NEW_FILE;\r\n  }\r\n  return o;\r\n}\r\n\r\nfunction _getUpdateRecord(change) {\r\n  const d = _getFileFolderDetails(change);\r\n  // determine position of item to update\r\n  const position = _findPositionInTree(d.oldFilePath, _fileExplorerDataModel);\r\n  // create change configuration for tree updates\r\n  return {\r\n    position: position,\r\n    // updates to data structure\r\n    updates: [\r\n      {\r\n        property: 'NAME',\r\n        value: d.newName\r\n      }, {\r\n        property: 'FILE_PATH',\r\n        value: d.newFilePath\r\n      }\r\n    ],\r\n    childUpdates: [\r\n      {\r\n        property: 'FILE_PATH',\r\n        findStartsWithString: d.oldFilePath,\r\n        replaceString: d.newFilePath\r\n      }\r\n    ],\r\n    // updates to user interface\r\n    htmlUpdates: [\r\n      {\r\n        column: 0,\r\n        value: d.newName\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nfunction _getAddRecord(change, tableDepth, tableIndex) {\r\n  // create record to insert into interface at appropriate locations\r\n  const row = {\r\n    // calculate depth of row to insert\r\n    DATA_DEPTH: tableDepth + 1,\r\n    NAME: change.NAME,\r\n    ICON_TYPE: change.ICON_TYPE,\r\n    SIZE: change.SIZE,\r\n    LAST_EDIT_DATE: change.LAST_EDIT_DATE,\r\n    FILE_PATH: change.FILE_PATH\r\n  };\r\n  // determine position to insert new record into tree\r\n  const position = treeator.findLastChild(tableIndex || 0, _fileExplorerDataModel);\r\n  // create change configuration for tree updates\r\n  return {\r\n    position: position + 1,\r\n    data: row\r\n  };\r\n}\r\n\r\nfunction _getDeleteRecord(change) {\r\n  // determine position of item to delete\r\n  const position = _findPositionInTree(change.FILE_PATH, _fileExplorerDataModel);\r\n  // create change configuration for tree updates\r\n  return {\r\n    position: position\r\n  };\r\n}\r\n\r\nfunction _updateTree(changeType, records) {\r\n  if (changeType === 'add') {\r\n    // add elements to tree and push passed updates to tree data model.\r\n    treeator.appendTreeRecords(records);\r\n  } else if (changeType === 'delete') {\r\n    // add elements to tree and push passed updates to tree data model.\r\n    treeator.removeTreeRecords(records);\r\n  } else if (changeType === 'update') {\r\n    // add elements to tree and push passed updates to tree data model.\r\n    treeator.updateTreeRecords(records);\r\n  }\r\n}\r\n\r\nfunction _updateUserInterface(changes, changeType) {\r\n  const records = [];\r\n  const tableIndex = _fileExplorerFolderView.dataModelIndex;\r\n  let tableDepth = -1;\r\n  // check if a folder has been loaded\r\n  if (tableIndex || tableIndex === 0) {\r\n    tableDepth = _fileExplorerDataModel[tableIndex].DATA_DEPTH;\r\n  }\r\n  // loop through list of changes returned by server\r\n  for (let i = 0; i < changes.length; i++) {\r\n    const change = changes[i];\r\n    let record;\r\n    if (changeType === 'add') {\r\n      // prepare data for updating the file tree\r\n      record = _getAddRecord(change, tableDepth, tableIndex);\r\n      records.push(record);\r\n      // update table data model so that table is refreshed with correct information on rebuild\r\n      // push to second last position in table so it appears above the \"add new row\" placeholder\r\n      _fileExplorerFolderView.data.splice(_fileExplorerFolderView.data.length - 1, 0, record.data);\r\n    } else if (changeType === 'delete') {\r\n      // prepare data for updating the file tree\r\n      record = _getDeleteRecord(change);\r\n      records.push(record);\r\n      // find position of record in folder view\r\n      const index = _findPositionInTree(change.FILE_PATH, _fileExplorerFolderView.data);\r\n      // remove record from index in folder view\r\n      _fileExplorerFolderView.data.splice(index, 1);\r\n    } else if (changeType === 'update') {\r\n      // prepare data for updating the file tree\r\n      record = _getUpdateRecord(change);\r\n      records.push(record);\r\n      // update record details\r\n      const d = _getFileFolderDetails(change);\r\n      const oldFilePath = d.oldFilePath;\r\n      const newFilePath = d.newFilePath;\r\n      const newName = d.newName;\r\n      const index = _findPositionInTree(oldFilePath, _fileExplorerFolderView.data);\r\n      const updateRecord = _fileExplorerFolderView.data[index];\r\n      updateRecord.NAME = newName;\r\n      updateRecord.FILE_PATH = newFilePath;\r\n    }\r\n  }\r\n  // total rebuild of table\r\n  _getFolderView(tableIndex, _fileExplorerFolderView.data);\r\n  // update existing tree\r\n  _updateTree(changeType, records);\r\n}\r\n\r\nfunction _getTree(data) {\r\n  const treeOptions = {\r\n    tree: {\r\n      div: _fileExplorerConfig.ui.treeDiv,\r\n      data: data,\r\n      // renderer: null,\r\n      columns: {\r\n        sourceNames: ['NAME'],\r\n        newNames: ['name'],\r\n        widths: [250],\r\n        alignment: ['left']\r\n      },\r\n      rows: {\r\n        // collapseIcon: null,\r\n        // expandIcon: null,\r\n        rowTypeIcons: 'filesystem',\r\n        // renderer: null,\r\n        // onClick: null,\r\n        onDblClick: function (tr, row, pos) {\r\n          _reloadBreadCrumb(row, data);\r\n          _reloadTable(row, pos, data);\r\n        },\r\n        // onHover: null,\r\n        // onHoverOut: null\r\n      },\r\n      cells: {\r\n        // renderer: null\r\n      }\r\n    },\r\n    search: {\r\n      div: _fileExplorerConfig.ui.treeSearchDiv\r\n    }\r\n  };\r\n  treeator.init(treeOptions);\r\n  return treeOptions;\r\n}\r\n\r\nfunction _getToolbarSearch() {\r\n  const toolbarSearchOptions = {\r\n    div: _fileExplorerConfig.ui.tableSearchDiv,\r\n    // Custom renderer required to override default name of element so that the\r\n    // treeator search has a unique element to target\r\n    renderer: function inputRenderer() {\r\n      const e = {};\r\n      e.id = `${_fileExplorerConfig.ui.tableSearchDiv}_input`;\r\n      e.name = 'search';\r\n      e.placeholder = 'Search Folder';\r\n      e.style = {\r\n        'font-size': '16px',\r\n        'font-family': 'roboto',\r\n        padding: '10px',\r\n        boxSizing: 'border-box',\r\n        width: '100%',\r\n        border: 'solid 1px rgba(0,0,0,.125)',\r\n        borderRadius: '3px',\r\n        textIndent: '30px',\r\n        backgroundColor: 'rgba(241,243,244,1)'\r\n      };\r\n      return e;\r\n    },\r\n    // onClick: null,\r\n    // onFocusOut: null,\r\n    // onHover: null,\r\n    onKeyUp: function () {\r\n      tableator.searchTable(_fileExplorerConfig.ui.tableDiv, `${_fileExplorerConfig.ui.tableSearchDiv}_input`);\r\n    },\r\n    icon: {\r\n      // innerHTML: null,\r\n      // renderer: null\r\n    }\r\n  };\r\n  inputator.init(toolbarSearchOptions);\r\n}\r\n\r\nfunction _getTreeSearch(treeOptions) {\r\n  const treeSearchOptions = {\r\n    div: _fileExplorerConfig.ui.treeSearchDiv,\r\n    renderer: function inputRenderer() {\r\n      const e = {};\r\n      // give input a unique name to avoid conflicts with other search boxes\r\n      e.id = `${_fileExplorerConfig.ui.treeSearchDiv}_input`;\r\n      e.name = 'search';\r\n      e.placeholder = 'Search Directory';\r\n      e.style = {\r\n        'font-size': '16px',\r\n        'font-family': 'roboto',\r\n        padding: '10px',\r\n        boxSizing: 'border-box',\r\n        width: '100%',\r\n        border: 'solid 1px rgba(0,0,0,.125)',\r\n        borderRadius: '3px',\r\n        textIndent: '30px',\r\n        backgroundColor: 'rgba(241,243,244,1)'\r\n      };\r\n      return e;\r\n    },\r\n    // onClick: null,\r\n    // onFocusOut: null,\r\n    // onHover: null,\r\n    onKeyUp: function () {\r\n      treeator.searchTable(`${_fileExplorerConfig.ui.treeSearchDiv}_input`, 'treeator-tree', _fileExplorerConfig.ui.treeDiv, treeOptions);\r\n    },\r\n    icon: {\r\n      // innerHTML: null,\r\n      // renderer: null\r\n    }\r\n  };\r\n  inputator.init(treeSearchOptions);\r\n}\r\n\r\nfunction _getFileSystemData() {\r\n  // define request config\r\n  const options = {\r\n    method: 'GET',\r\n    url: _fileExplorerConfig.api.directory,\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  // send ajax request to server\r\n  return http.sendRequest(options);\r\n}\r\n\r\n/* ============================== Public Methods ============================ */\r\n\r\nfunction init(config) {\r\n  // sets functions containing object property\r\n  _fileExplorerConfig = config;\r\n  // get file system data for navigating\r\n  // store data in global object so it can be shared between all modules\r\n  _getFileSystemData().then(function (res) {\r\n    const data = JSON.parse(res);\r\n    _fileExplorerDataModel = data[0].data;\r\n    // construct tree view of data\r\n    const treeOptions = _getTree(_fileExplorerDataModel);\r\n    _getBreadcrumb([]);\r\n    _getToolbarSearch();\r\n    _getTreeSearch(treeOptions);\r\n    _getFolderView(null, _addEmptyRow([], _fileExplorerDataModel[0].FILE_PATH));\r\n  });\r\n}\r\n\r\n/* =========================== Export Public APIs =========================== */\r\n\r\nmodule.exports = {\r\n  init\r\n};","module.exports = breadcrumbjs;","module.exports = inputator;","module.exports = treeator;","module.exports = tableator;","module.exports = contextmenuator;","module.exports = modalator;"],"sourceRoot":""}